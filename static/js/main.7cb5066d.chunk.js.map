{"version":3,"sources":["components/Section/Section.js","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","FeedBackOptions","onLeaveFeedback","className","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","FeedbackOptions","target","textContent","state","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAaeA,MAXf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,MCaQC,MAlBf,YAA+C,IAApBC,EAAmB,EAAnBA,gBACzB,OACE,qCACE,wBAAQC,UAAU,eAAeC,QAASF,EAA1C,kBAIA,wBAAQC,UAAU,eAAeC,QAASF,EAA1C,qBAIA,wBAAQC,UAAU,eAAeC,QAASF,EAA1C,qB,MCUSG,MAnBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIP,UAAU,mBAAd,UACE,wCAAWG,EAAX,OACA,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCNSC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,K,MCwDEC,MAnDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNR,EADM,KACAS,EADA,OAEiBD,mBAAS,GAF1B,mBAENP,EAFM,KAEGS,EAFH,OAGSF,mBAAS,GAHlB,mBAGNN,EAHM,KAGDS,EAHC,KAsBPC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAO1B,OACE,sBAAKL,UAAU,YAAf,UACE,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACE,cAACoB,EAAD,CAAiBjB,gBA5BF,SAAC,GAGpB,OAHmC,EAAbkB,OACFC,aAGlB,IAAK,OACHN,GAAQ,SAAAO,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHN,GAAW,SAAAM,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHL,GAAO,SAAAK,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAgBF,cAAC,EAAD,CAASvB,MAAM,aAAf,SAC4B,IAAzBmB,IACC,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAjB8B,WACtC,IAAMD,EAAQS,IACd,OAAOT,GAAUH,EAAOG,EAAS,KAAKc,QAAQ,GAAK,EAevBC,KAGtB,cAAC,EAAD,CAAcZ,QAAQ,4BC9ChCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7cb5066d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import './Feedback.css';\r\nfunction FeedBackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <button className=\"item__button\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n\r\n      <button className=\"item__button\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n\r\n      <button className=\"item__button\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedBackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className=\"item__statistics\">\r\n      <li>Good: {good} </li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\nexport default Statistics;\r\n","function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport './App.css';\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleChange = ({ target }) => {\n    let option = target.textContent;\n\n    switch (option) {\n      case 'Good':\n        setGood(state => state + 1);\n        break;\n      case 'Neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'Bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? ((good / total) * 100).toFixed(0) : 0;\n  };\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={handleChange} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}